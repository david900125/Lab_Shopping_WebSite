// <auto-generated />
using System;
using Lab_Shopping_WebSite.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab_Shopping_WebSite.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Action_Auths", b =>
                {
                    b.Property<int>("ActionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionID"), 1L, 1);

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("ActionID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.HasIndex("RoleID");

                    b.ToTable("Action_Auths", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Blog_Contents", b =>
                {
                    b.Property<int>("Blog_ContentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Blog_ContentID"), 1L, 1);

                    b.Property<int>("BlogID")
                        .HasColumnType("int");

                    b.Property<string>("Blog_Content")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Blog_ContentID");

                    b.HasIndex("BlogID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Blog_Contents", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Blog_Hrefs", b =>
                {
                    b.Property<int>("BlogID")
                        .HasColumnType("int");

                    b.Property<int>("CommodityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("BlogID", "CommodityID");

                    b.HasIndex("CommodityID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Blog_Hrefs", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Blog_Images", b =>
                {
                    b.Property<int>("Blog_Images_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Blog_Images_ID"), 1L, 1);

                    b.Property<int>("BlogID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Blog_Images_ID");

                    b.HasIndex("BlogID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Blog_Images", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Blogs", b =>
                {
                    b.Property<int>("BlogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogID"), 1L, 1);

                    b.Property<string>("Blog_Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.HasKey("BlogID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Blogs", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Colors", b =>
                {
                    b.Property<int>("ColorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorID"), 1L, 1);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColorID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Colors", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Commodities", b =>
                {
                    b.Property<int>("CommodityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommodityID"), 1L, 1);

                    b.Property<string>("CommodityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Material")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isReleased")
                        .HasColumnType("bit");

                    b.HasKey("CommodityID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Commodities", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Commodity_Images", b =>
                {
                    b.Property<int>("Commodity_ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Commodity_ImageID"), 1L, 1);

                    b.Property<int>("CommodityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Commodity_ImageID");

                    b.HasIndex("CommodityID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Commodity_Images", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Commodity_Kinds", b =>
                {
                    b.Property<int>("Commodity_KindID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Commodity_KindID"), 1L, 1);

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Commodity_KindID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Commodity_Kinds", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Commodity_Prices", b =>
                {
                    b.Property<int>("Commodity_PriceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Commodity_PriceID"), 1L, 1);

                    b.Property<int>("CommodityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PriceID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Commodity_PriceID");

                    b.HasIndex("CommodityID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.HasIndex("PriceID");

                    b.ToTable("Commodity_Prices", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Commodity_Sizes", b =>
                {
                    b.Property<int>("Commodity_SizesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Commodity_SizesID"), 1L, 1);

                    b.Property<int>("ColorID")
                        .HasColumnType("int");

                    b.Property<int>("CommodityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SizeID")
                        .HasColumnType("int");

                    b.HasKey("Commodity_SizesID");

                    b.HasIndex("ColorID");

                    b.HasIndex("CommodityID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.HasIndex("SizeID");

                    b.ToTable("Commodity_Sizes", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Commodity_Tags", b =>
                {
                    b.Property<int>("CommodityID")
                        .HasColumnType("int");

                    b.Property<int>("TagID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.HasKey("CommodityID", "TagID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.HasIndex("TagID");

                    b.ToTable("Commodity_Tags", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Coupon_Uses", b =>
                {
                    b.Property<string>("SaleID")
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("CouponID")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Use_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("SaleID", "CouponID");

                    b.HasIndex("CouponID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Coupon_Uses", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Coupon_Ways", b =>
                {
                    b.Property<int>("Coupon_WayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Coupon_WayID"), 1L, 1);

                    b.Property<string>("Coupon_Way")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Coupon_WayID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Coupon_Ways", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Coupons", b =>
                {
                    b.Property<int>("CouponID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CouponID"), 1L, 1);

                    b.Property<decimal>("Amount_Achieved")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<string>("Coupon_Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Coupon_Key")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Coupon_Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Coupon_WayID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Issued_Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Issued_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Received_Amount")
                        .HasColumnType("int");

                    b.Property<bool>("isIssued")
                        .HasColumnType("bit");

                    b.HasKey("CouponID");

                    b.HasIndex("Coupon_WayID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Coupons", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Delivery_Options", b =>
                {
                    b.Property<int>("Delivery_OptionsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Delivery_OptionsID"), 1L, 1);

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<decimal>("Delivery_Cost")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Delivery_Option")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Delivery_PlaceID")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Delivery_OptionsID");

                    b.HasIndex("Creator");

                    b.HasIndex("Delivery_PlaceID");

                    b.HasIndex("Modifier");

                    b.ToTable("Delivery_Options", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Delivery_Places", b =>
                {
                    b.Property<int>("Delivery_PlaceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Delivery_PlaceID"), 1L, 1);

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("Delivery_Place")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Delivery_PlaceID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Delivery_Places", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Files", b =>
                {
                    b.Property<int>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileID"), 1L, 1);

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.HasKey("FileID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Files", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Href_Coordinations", b =>
                {
                    b.Property<int>("Href_CoordinationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Href_CoordinationID"), 1L, 1);

                    b.Property<decimal?>("Bottom")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasComment("CSS:Position Bottom");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int>("FileID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Left")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasComment("CSS:Position Left");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Right")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasComment("CSS:Position Right");

                    b.Property<decimal?>("Top")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasComment("CSS:Position Top");

                    b.HasKey("Href_CoordinationID");

                    b.HasIndex("Creator");

                    b.HasIndex("FileID");

                    b.HasIndex("Modifier");

                    b.ToTable("Href_Coordinations", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Inventories", b =>
                {
                    b.Property<int>("InventoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryID"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("Commodity_SizeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<bool>("Increase_Decrease")
                        .HasColumnType("bit");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SaleID")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("Total_Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("InventoryID");

                    b.HasIndex("Commodity_SizeID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.HasIndex("SaleID");

                    b.ToTable("Inventories", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Like_Commodities", b =>
                {
                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<int>("CommodityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Add_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.HasKey("MemberID", "CommodityID");

                    b.HasIndex("CommodityID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Like_Commodities", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Members", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("Email_Address")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSignin")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("MemberID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.HasIndex("RoleID");

                    b.ToTable("Members", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Menus", b =>
                {
                    b.Property<string>("MenuID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("MenuName")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("MenuUrl")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Menus", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Pages", b =>
                {
                    b.Property<string>("PageID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MenuID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PageName")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("PageUrl")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("PageID", "MenuID");

                    b.HasIndex("Creator");

                    b.HasIndex("MenuID");

                    b.HasIndex("Modifier");

                    b.ToTable("Pages", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Payments", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"), 1L, 1);

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Prices", b =>
                {
                    b.Property<int>("PriceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriceID"), 1L, 1);

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PriceID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Prices", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Received_Coupons", b =>
                {
                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<int>("CouponID")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Received_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("MemberID", "CouponID");

                    b.HasIndex("CouponID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Received_Coupons", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Recently_Viewed", b =>
                {
                    b.Property<int>("Recently_ViewedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Recently_ViewedID"), 1L, 1);

                    b.Property<int>("CommodityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("MemberID")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Viewed_Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Recently_ViewedID");

                    b.HasIndex("CommodityID");

                    b.HasIndex("Creator");

                    b.HasIndex("MemberID");

                    b.HasIndex("Modifier");

                    b.ToTable("Recently_Viewed", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Roles", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"), 1L, 1);

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            RoleName = "管理者"
                        },
                        new
                        {
                            RoleID = 2,
                            RoleName = "使用者"
                        });
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Sales", b =>
                {
                    b.Property<string>("SaleID")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<decimal>("Delivery_Cost")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<int>("Delivery_optionID")
                        .HasColumnType("int");

                    b.Property<int>("Discount_Total")
                        .HasPrecision(10, 2)
                        .HasColumnType("int");

                    b.Property<DateTime>("Established")
                        .HasColumnType("datetime2");

                    b.Property<string>("InVoice")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total_Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("isChecked")
                        .HasColumnType("bit");

                    b.HasKey("SaleID");

                    b.HasIndex("Creator");

                    b.HasIndex("Delivery_optionID");

                    b.HasIndex("MemberID");

                    b.HasIndex("Modifier");

                    b.HasIndex("PaymentID");

                    b.ToTable("Sales", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Sales_items", b =>
                {
                    b.Property<string>("SaleID")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("Commodity_SizeID")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<decimal>("Total_Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Unit_Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("SaleID", "Commodity_SizeID");

                    b.HasIndex("Commodity_SizeID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.HasIndex("StatusID");

                    b.ToTable("Sales_items", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Shopping_Carts", b =>
                {
                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<int>("Commodity_SizeID")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.HasKey("MemberID", "Commodity_SizeID");

                    b.HasIndex("Commodity_SizeID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Shopping_Carts", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Shops", b =>
                {
                    b.Property<int>("ShopID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShopID"), 1L, 1);

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Shop_Address")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Shop_Info")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ShopID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Shops", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Sizes", b =>
                {
                    b.Property<int>("SizeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SizeID"), 1L, 1);

                    b.Property<int>("Commodity_KindsID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SizeID");

                    b.HasIndex("Commodity_KindsID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Sizes", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Status", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusID"), 1L, 1);

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("StatusID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Status", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Subscribes", b =>
                {
                    b.Property<int>("SubID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubID"), 1L, 1);

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<string>("Email_Address")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Sub_Date")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("SubID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Subscribes", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Tags", b =>
                {
                    b.Property<int>("TagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagID"), 1L, 1);

                    b.Property<int>("Commodity_KindsID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("Creator")
                        .HasColumnType("int");

                    b.Property<int?>("Modifier")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagID");

                    b.HasIndex("Commodity_KindsID");

                    b.HasIndex("Creator");

                    b.HasIndex("Modifier");

                    b.ToTable("Tags", (string)null);
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Action_Auths", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("Action_AuthCreator")
                        .HasForeignKey("Creator");

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("Action_AuthsModifer")
                        .HasForeignKey("Modifier");

                    b.HasOne("Lab_Shopping_WebSite.Models.Roles", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Blog_Contents", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Blogs", "Blog")
                        .WithMany("Contents")
                        .HasForeignKey("BlogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("Blog_ContentsCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("Blog_ContentsModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Blog");

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Blog_Hrefs", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Blogs", "Blog")
                        .WithMany("Hrefs")
                        .HasForeignKey("BlogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Commodities", "Commodity")
                        .WithMany("Blog_Hrefs")
                        .HasForeignKey("CommodityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("Blog_HrefsCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("Blog_HrefsModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Blog");

                    b.Navigation("Commodity");

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Blog_Images", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Blogs", "Blog")
                        .WithMany("Images")
                        .HasForeignKey("BlogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("Blog_ImagesCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("Blog_ImagesModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Blog");

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Blogs", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("BlogsCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("BlogsModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Colors", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("ColorsCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("ColorsModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Commodities", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("CommoditiesCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("CommoditiesModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Commodity_Images", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Commodities", "Commodity")
                        .WithMany("Images")
                        .HasForeignKey("CommodityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("CommodityImagesCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("CommodityImagesModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Commodity");

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Commodity_Kinds", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("CommodityKindsCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("CommodityKindsModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Commodity_Prices", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Commodities", "commodity")
                        .WithMany("Commodity_Prices")
                        .HasForeignKey("CommodityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("CommodityPricesCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("CommodityPricesModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Prices", "PriceTag")
                        .WithMany("Commodity_Prices")
                        .HasForeignKey("PriceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");

                    b.Navigation("PriceTag");

                    b.Navigation("commodity");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Commodity_Sizes", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Colors", "Color")
                        .WithMany("Commodity_Sizes")
                        .HasForeignKey("ColorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Commodities", "Commodity")
                        .WithMany("Commodity_Sizes")
                        .HasForeignKey("CommodityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("CommoditySizesCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("CommoditySizesModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Sizes", "Size")
                        .WithMany("Commodity_Sizes")
                        .HasForeignKey("SizeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Commodity");

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Commodity_Tags", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Commodities", "Commodity")
                        .WithMany("Commodity_Tags")
                        .HasForeignKey("CommodityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("CommodityTagsCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("CommodityTagsModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Tags", "Tag")
                        .WithMany("Commodity_Tags")
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commodity");

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Coupon_Uses", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Coupons", "Coupon")
                        .WithMany("Coupon_Uses")
                        .HasForeignKey("CouponID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("CouponUsesCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("CouponUsesModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Sales", "Sale")
                        .WithMany("Coupon_Uses")
                        .HasForeignKey("SaleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Coupon_Ways", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("CouponWaysCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("CouponWaysModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Coupons", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Coupon_Ways", "Coupon_Ways")
                        .WithMany("Coupons")
                        .HasForeignKey("Coupon_WayID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("CouponsCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("CouponsModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Coupon_Ways");

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Delivery_Options", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("DeliveryOptionsCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Delivery_Places", "Delivery_Place")
                        .WithMany("Delivery_Options")
                        .HasForeignKey("Delivery_PlaceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("DeliveryOptionsModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("Delivery_Place");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Delivery_Places", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("DeliveryPlacesCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("DeliveryPlacesModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Files", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("FilesCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("FilesModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Href_Coordinations", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("HrefCoordinationsCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Files", "File")
                        .WithMany("Href_Coordinations")
                        .HasForeignKey("FileID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("HrefCoordinationsModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("File");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Inventories", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Commodity_Sizes", "Commodity_Sizes")
                        .WithMany("inventories")
                        .HasForeignKey("Commodity_SizeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("InventoriesCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("InventoriesModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Sales", "Sale")
                        .WithMany("Inventories")
                        .HasForeignKey("SaleID");

                    b.Navigation("Commodity_Sizes");

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Like_Commodities", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Commodities", "Commodity")
                        .WithMany("Like_Commodities")
                        .HasForeignKey("CommodityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("LikeCommoditiesCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "Member")
                        .WithMany("Like_Commodities")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("LikeCommoditiesModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Commodity");

                    b.Navigation("CreateMember");

                    b.Navigation("Member");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Members", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("MembersCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("MembersModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Roles", "Role")
                        .WithMany("Members")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Menus", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("MenusCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("MenusModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Pages", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("PagesCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Menus", "Menu")
                        .WithMany("Pages")
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("PagesModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("Menu");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Payments", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("PaymentsCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("PaymentsModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Prices", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("PricesCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("PricesModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Received_Coupons", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Coupons", "Coupon")
                        .WithMany("Received_Coupons")
                        .HasForeignKey("CouponID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("ReceivedCouponsCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "Member")
                        .WithMany("Received_Coupons")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("ReceivedCouponsModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Coupon");

                    b.Navigation("CreateMember");

                    b.Navigation("Member");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Recently_Viewed", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Commodities", "Commodity")
                        .WithMany("Recently_Viewed")
                        .HasForeignKey("CommodityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("RecentlyViewedCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "Member")
                        .WithMany("Recently_Viewed")
                        .HasForeignKey("MemberID");

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("RecentlyViewedModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Commodity");

                    b.Navigation("CreateMember");

                    b.Navigation("Member");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Roles", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("RolesCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("RolesModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Sales", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("SalesCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Delivery_Options", "Delivery_Option")
                        .WithMany("Sales")
                        .HasForeignKey("Delivery_optionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "Member")
                        .WithMany("Sales")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("SalesModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Payments", "Payment")
                        .WithMany("Sales")
                        .HasForeignKey("PaymentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreateMember");

                    b.Navigation("Delivery_Option");

                    b.Navigation("Member");

                    b.Navigation("ModifyMember");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Sales_items", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Commodity_Sizes", "Commodity_Size")
                        .WithMany("Sales_Items")
                        .HasForeignKey("Commodity_SizeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("SalesitemsCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("SalesitemsModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Sales", "Sale")
                        .WithMany("Sales_items")
                        .HasForeignKey("SaleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Status", "Status")
                        .WithMany("Sales_Items")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commodity_Size");

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");

                    b.Navigation("Sale");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Shopping_Carts", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Commodity_Sizes", "Commodity_Sizes")
                        .WithMany("Shopping_Carts")
                        .HasForeignKey("Commodity_SizeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("ShoppingCartsCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "Member")
                        .WithMany("Shopping_Carts")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("ShoppingCartsModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Commodity_Sizes");

                    b.Navigation("CreateMember");

                    b.Navigation("Member");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Shops", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("ShopsCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("ShopsModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Sizes", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Commodity_Kinds", "Commodity_Kinds")
                        .WithMany("Sizes")
                        .HasForeignKey("Commodity_KindsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("SizesCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("SizesModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Commodity_Kinds");

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Status", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("StatusCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("StatusModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Subscribes", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("SubscribesCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("SubscribesModifer")
                        .HasForeignKey("Modifier")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Tags", b =>
                {
                    b.HasOne("Lab_Shopping_WebSite.Models.Commodity_Kinds", "Commodity_Kind")
                        .WithMany("Tags")
                        .HasForeignKey("Commodity_KindsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "CreateMember")
                        .WithMany("TagsCreator")
                        .HasForeignKey("Creator")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Lab_Shopping_WebSite.Models.Members", "ModifyMember")
                        .WithMany("TagsModifer")
                        .HasForeignKey("Modifier");

                    b.Navigation("Commodity_Kind");

                    b.Navigation("CreateMember");

                    b.Navigation("ModifyMember");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Blogs", b =>
                {
                    b.Navigation("Contents");

                    b.Navigation("Hrefs");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Colors", b =>
                {
                    b.Navigation("Commodity_Sizes");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Commodities", b =>
                {
                    b.Navigation("Blog_Hrefs");

                    b.Navigation("Commodity_Prices");

                    b.Navigation("Commodity_Sizes");

                    b.Navigation("Commodity_Tags");

                    b.Navigation("Images");

                    b.Navigation("Like_Commodities");

                    b.Navigation("Recently_Viewed");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Commodity_Kinds", b =>
                {
                    b.Navigation("Sizes");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Commodity_Sizes", b =>
                {
                    b.Navigation("Sales_Items");

                    b.Navigation("Shopping_Carts");

                    b.Navigation("inventories");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Coupon_Ways", b =>
                {
                    b.Navigation("Coupons");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Coupons", b =>
                {
                    b.Navigation("Coupon_Uses");

                    b.Navigation("Received_Coupons");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Delivery_Options", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Delivery_Places", b =>
                {
                    b.Navigation("Delivery_Options");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Files", b =>
                {
                    b.Navigation("Href_Coordinations");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Members", b =>
                {
                    b.Navigation("Action_AuthCreator");

                    b.Navigation("Action_AuthsModifer");

                    b.Navigation("Blog_ContentsCreator");

                    b.Navigation("Blog_ContentsModifer");

                    b.Navigation("Blog_HrefsCreator");

                    b.Navigation("Blog_HrefsModifer");

                    b.Navigation("Blog_ImagesCreator");

                    b.Navigation("Blog_ImagesModifer");

                    b.Navigation("BlogsCreator");

                    b.Navigation("BlogsModifer");

                    b.Navigation("ColorsCreator");

                    b.Navigation("ColorsModifer");

                    b.Navigation("CommoditiesCreator");

                    b.Navigation("CommoditiesModifer");

                    b.Navigation("CommodityImagesCreator");

                    b.Navigation("CommodityImagesModifer");

                    b.Navigation("CommodityKindsCreator");

                    b.Navigation("CommodityKindsModifer");

                    b.Navigation("CommodityPricesCreator");

                    b.Navigation("CommodityPricesModifer");

                    b.Navigation("CommoditySizesCreator");

                    b.Navigation("CommoditySizesModifer");

                    b.Navigation("CommodityTagsCreator");

                    b.Navigation("CommodityTagsModifer");

                    b.Navigation("CouponUsesCreator");

                    b.Navigation("CouponUsesModifer");

                    b.Navigation("CouponWaysCreator");

                    b.Navigation("CouponWaysModifer");

                    b.Navigation("CouponsCreator");

                    b.Navigation("CouponsModifer");

                    b.Navigation("DeliveryOptionsCreator");

                    b.Navigation("DeliveryOptionsModifer");

                    b.Navigation("DeliveryPlacesCreator");

                    b.Navigation("DeliveryPlacesModifer");

                    b.Navigation("FilesCreator");

                    b.Navigation("FilesModifer");

                    b.Navigation("HrefCoordinationsCreator");

                    b.Navigation("HrefCoordinationsModifer");

                    b.Navigation("InventoriesCreator");

                    b.Navigation("InventoriesModifer");

                    b.Navigation("LikeCommoditiesCreator");

                    b.Navigation("LikeCommoditiesModifer");

                    b.Navigation("Like_Commodities");

                    b.Navigation("MembersCreator");

                    b.Navigation("MembersModifer");

                    b.Navigation("MenusCreator");

                    b.Navigation("MenusModifer");

                    b.Navigation("PagesCreator");

                    b.Navigation("PagesModifer");

                    b.Navigation("PaymentsCreator");

                    b.Navigation("PaymentsModifer");

                    b.Navigation("PricesCreator");

                    b.Navigation("PricesModifer");

                    b.Navigation("ReceivedCouponsCreator");

                    b.Navigation("ReceivedCouponsModifer");

                    b.Navigation("Received_Coupons");

                    b.Navigation("RecentlyViewedCreator");

                    b.Navigation("RecentlyViewedModifer");

                    b.Navigation("Recently_Viewed");

                    b.Navigation("RolesCreator");

                    b.Navigation("RolesModifer");

                    b.Navigation("Sales");

                    b.Navigation("SalesCreator");

                    b.Navigation("SalesModifer");

                    b.Navigation("SalesitemsCreator");

                    b.Navigation("SalesitemsModifer");

                    b.Navigation("ShoppingCartsCreator");

                    b.Navigation("ShoppingCartsModifer");

                    b.Navigation("Shopping_Carts");

                    b.Navigation("ShopsCreator");

                    b.Navigation("ShopsModifer");

                    b.Navigation("SizesCreator");

                    b.Navigation("SizesModifer");

                    b.Navigation("StatusCreator");

                    b.Navigation("StatusModifer");

                    b.Navigation("SubscribesCreator");

                    b.Navigation("SubscribesModifer");

                    b.Navigation("TagsCreator");

                    b.Navigation("TagsModifer");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Menus", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Payments", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Prices", b =>
                {
                    b.Navigation("Commodity_Prices");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Roles", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Sales", b =>
                {
                    b.Navigation("Coupon_Uses");

                    b.Navigation("Inventories");

                    b.Navigation("Sales_items");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Sizes", b =>
                {
                    b.Navigation("Commodity_Sizes");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Status", b =>
                {
                    b.Navigation("Sales_Items");
                });

            modelBuilder.Entity("Lab_Shopping_WebSite.Models.Tags", b =>
                {
                    b.Navigation("Commodity_Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
